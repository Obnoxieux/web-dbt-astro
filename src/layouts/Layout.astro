---
import '../styles/global.css';
import Footer from '../components/astro/Footer.astro';
import { OpenGraphDefaults } from '../lib/classes/OpenGraphDefaults';
import Navbar from '../components/svelte/core/Navbar.svelte';
import NavbarLinks from '../components/svelte/core/NavbarLinks.svelte';

interface Props {
  title?: string;
  description?: string;
  image?: string;
  metaTags?: any;
}

const { 
  title = OpenGraphDefaults.title,
  description = OpenGraphDefaults.description,
  image = OpenGraphDefaults.ogImageName,
  metaTags
} = Astro.props;

// Compute meta tags
const url = Astro.url;
const ogImage = `${url}${image}`;
const canonicalURL = url;

// Merge with any provided meta tags
const finalMetaTags = {
  title,
  titleTemplate: 'web-dbt | %s',
  description,
  canonical: canonicalURL,
  openGraph: OpenGraphDefaults.getOpenGraphObject(url, title, description),
  ...metaTags
};
---

<!doctype html>
<html lang="en">
<head>
  <meta charset="UTF-8"/>
  <meta name="viewport" content="width=device-width, height=device-height, initial-scale=1"/>
  <link rel="icon" type="image/png" href="/favicon.png"/>
  <meta name="generator" content={Astro.generator}/>
  
  <!-- Basic Meta Tags -->
  <title>{finalMetaTags.title}</title>
  <meta name="description" content={finalMetaTags.description} />
  <link rel="canonical" href={finalMetaTags.canonical} />
  
  <!-- Open Graph / Facebook -->
  <meta property="og:type" content={finalMetaTags.openGraph.type} />
  <meta property="og:url" content={finalMetaTags.openGraph.url} />
  <meta property="og:title" content={finalMetaTags.openGraph.title} />
  <meta property="og:description" content={finalMetaTags.openGraph.description} />
  <meta property="og:image" content={finalMetaTags.openGraph.images[0].url} />
  <meta property="og:image:alt" content={finalMetaTags.openGraph.images[0].alt} />
  <meta property="og:site_name" content={finalMetaTags.openGraph.siteName} />
</head>

<body>
  <div class="drawer">
    <input id="drawer" type="checkbox" class="drawer-toggle"/>
    <div class="drawer-content flex flex-col justify-items-center justify-self-center max-w-[92%] md:max-w-[85%] xl:max-w-[75%]">
      
      <Navbar client:load />
      
      <slot />
      
      <div class="divider"></div>
      
      <Footer />
    </div>
    <div class="drawer-side min-h-full">
      <label for="drawer" class="drawer-overlay"></label>
      
      <ul class="menu p-4 w-[60%] h-full bg-base-200">
        <NavbarLinks />
      </ul>
    </div>
  </div>

  <style is:global>
    .drawer-side {
      z-index: 99;
    }
  </style>
</body>
</html>